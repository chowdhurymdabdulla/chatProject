
const watch = require("node-watch");
const fs = require("fs");
const Path = require("path");
const finallyAll = require('mn-utils/finallyAll');

const scanPath = exports.scanPath = ({ path, each, callback, exclude }) => {
  finallyAll((inc, dec) => {
    const _each = each || noop;
    const _exclude = exclude || noop;
    const core = (path) => {
      if (_exclude(path)) return;
      inc();
      regexpPath.test(path) || (path = './' + path);
      fs.stat(path, (err, stat) => {
        if (!stat) return dec();
        if (stat.isDirectory()) {
          const iteratee = (name) => {
            core(Path.join(path, name));
          };
          fs.readdir(path, (err, list) => {
            list && list.forEach(iteratee);
            dec();
          });
        } else {
          _each('found', path);
          dec();
        }
      });
    };
    core(path);
  }, callback);
};

const regexpPath = /^\.?\.?\/.*/;


exports.scanPathWatch = ({ path, each, callback, exclude }) => {
  scanPath({
    path, each, exclude,
    callback: () => {
      watch(path, { recursive: true }, each);
      callback && callback();
    }
  });
};
